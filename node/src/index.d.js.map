{"version":3,"sources":["index.d.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport { Buffer } from \"buffer\";\nimport { WebSocket } from \"ws\";\nexport interface ClientOptions {\n  endpoint?: string;\n  username?: string;\n  password?: string;\n  isSecure?: boolean;\n}\nexport declare class Client {\n  endpoint: string;\n  connection: WebSocket;\n  subscriptions: Map<\n    string,\n    {\n      request: any;\n      cursor: string | null;\n    }\n  >;\n  constructor(options: ClientOptions);\n  connect(): Promise<void>;\n  disconnect(): Promise<void>;\n  send_request(\n    operation: string,\n    params?: {},\n    options?: {}\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  handle_request(id: string): AsyncGenerator<Buffer, void, unknown>;\n  ensureConnection(): Promise<void>;\n  reconnect_with_backoff(): Promise<void>;\n  waitForConnection(timeout?: number): Promise<void>;\n  get_status(format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_blocks(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_logs(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_logs_decoded(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_transactions(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_receipts(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_contracts(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_uniswap_v2_pairs(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_uniswap_v2_prices(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_uniswap_v3_pools(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_uniswap_v3_fees(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_uniswap_v3_positions(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_uniswap_v3_prices(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_curve_tokens(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_curve_pools(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_curve_prices(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_transfers(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_erc20_tokens(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_erc20_approvals(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_erc20_transfers(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_fuel_spark_markets(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_fuel_spark_orders(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_fuel_unspent_utxos(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_fuel_scr20_tokens(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n  get_fuel_scr7_tokens(\n    params: Object,\n    deltas?: boolean,\n    format?: string\n  ): Promise<AsyncGenerator<Buffer, void, unknown>>;\n}\n"],"names":[],"mappings":"AAAA,8BAA8B"}